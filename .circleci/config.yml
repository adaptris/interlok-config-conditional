# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/project

    environment:
      JAVA_TOOL_OPTIONS: -Xmx2G -Djava.security.egd=file:/dev/./urandom
      TERM: dumb

    steps:
      - checkout

      - run:
          name: Configure
          command: |
            mkdir -p ~/.gradle
            echo "org.gradle.warning.mode=none" > ~/.gradle/gradle.properties
            sudo sed -i.bak -e "s/securerandom.source=file:\/dev\/random/securerandom.source=file:\/dev\/.\/urandom/g" -e "s/securerandom.strongAlgorithms=NativePRNGBlocking/securerandom.strongAlgorithms=NativePRNG/g" /usr/local/openjdk-8/jre/lib/security/java.security

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-{{ .Environment.CIRCLE_JOB}}-{{ checksum "build.gradle" }}
            - dependencies-{{ .Environment.CIRCLE_JOB}}-
            - dependencies-

      # run tests!
      - run:
          name: Run Tests
          command: |
            chmod +x ./gradlew
            ./gradlew -PverboseTests=true test jacocoTestReport

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          path: ~/test-results

      - run:
          name: codecov.io
          command: bash <(curl -s https://codecov.io/bash)

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: dependencies-{{ .Environment.CIRCLE_JOB}}-{{ checksum "build.gradle" }}

  publish:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/project

    environment:
      JAVA_TOOL_OPTIONS: -Xmx2G -Djava.security.egd=file:/dev/./urandom
      TERM: dumb

    steps:
      - checkout

      - run:
          name: Configure
          command: |
            sudo apt-get -y update
            sudo apt-get -y install graphviz
            mkdir -p ~/.gradle
            echo "org.gradle.warning.mode=none" > ~/.gradle/gradle.properties
            sudo sed -i.bak -e "s/securerandom.source=file:\/dev\/random/securerandom.source=file:\/dev\/.\/urandom/g" -e "s/securerandom.strongAlgorithms=NativePRNGBlocking/securerandom.strongAlgorithms=NativePRNG/g" /usr/local/openjdk-8/jre/lib/security/java.security

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-{{ .Environment.CIRCLE_JOB}}-{{ checksum "build.gradle" }}
            - dependencies-{{ .Environment.CIRCLE_JOB}}-
            - dependencies-

      # run tests!
      - run:
          name: Publish
          command: |
            chmod +x ./gradlew
            ./gradlew -PverboseTests=true test publish

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          path: ~/test-results

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: dependencies-{{ .Environment.CIRCLE_JOB}}-{{ checksum "build.gradle" }}

  buildjava11:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/project

    environment:
      JAVA_TOOL_OPTIONS: -Xmx2G -Djava.security.egd=file:/dev/./urandom -Dhttps.protocols=TLSv1,TLSv1.1,TLSv1.2
      TERM: dumb

    steps:
      - checkout

      - run:
          name: Configure
          command: |
            mkdir -p ~/.gradle
            echo "org.gradle.warning.mode=none" > ~/.gradle/gradle.properties
            sudo sed -i.bak -e "s/securerandom.source=file:\/dev\/random/securerandom.source=file:\/dev\/.\/urandom/g" -e "s/securerandom.strongAlgorithms=NativePRNGBlocking/securerandom.strongAlgorithms=NativePRNG/g" /etc/java-11-openjdk/security/java.security

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-{{ .Environment.CIRCLE_JOB}}-{{ checksum "build.gradle" }}
            - dependencies-{{ .Environment.CIRCLE_JOB}}-
            - dependencies-

      # run tests!
      - run:
          name: Run Tests
          command: |
            chmod +x ./gradlew
            ./gradlew -PverboseTests=true test jacocoTestReport

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          path: ~/test-results

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: dependencies-{{ .Environment.CIRCLE_JOB}}-{{ checksum "build.gradle" }}

workflows:
  version: 2
  on_commit:
    jobs:
      - build
      - buildjava11

  nightly:
    triggers:
      - schedule:
          cron: "00 06 * * *"
          filters:
            branches:
              only:
                - develop
    jobs:
      - build
